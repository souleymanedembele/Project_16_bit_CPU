do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:01:39 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:01:39 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:01:39 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:01:39 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:01:39 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:01:39 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:01:39 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:01:39 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:01:39 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:01:39 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:01:39 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (16) does not match connection size (4) for port 'data'. The port definition is at: ./DataMemory.v(43).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/DMem File: ./Datapath.sv Line: 27
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(105)
#    Time: 86 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 105
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 90300 ps
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:07:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:07:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:07:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:07:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:07:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:07:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:07:22 on May 25,2023, Elapsed time: 0:05:43
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:07:22 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(104)
#    Time: 86 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 104
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 90300 ps
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:09:45 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:09:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:09:45 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:09:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:09:45 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:09:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:09:45 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:09:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:09:45 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:09:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:09:47 on May 25,2023, Elapsed time: 0:02:25
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:09:47 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(104)
#    Time: 86 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 104
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 90300 ps
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:27 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# ** Error: (vlog-13069) ./Datapath.sv(109): near "end": syntax error, unexpected end, expecting ';'.
# End time: 17:14:27 on May 25,2023, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: /home/souleymane/intelFPGA_lite/20.1/modelsim_ase/linuxaloem/vlog failed.
# Error in macro ./runrtlDatapath.do line 16
# /home/souleymane/intelFPGA_lite/20.1/modelsim_ase/linuxaloem/vlog failed.
#     while executing
# "vlog -work work +acc "./Datapath.sv""
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:46 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:14:46 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:46 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:14:46 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:46 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:14:47 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:47 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:14:47 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:14:47 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:14:47 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:14:49 on May 25,2023, Elapsed time: 0:05:02
# Errors: 1, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:14:49 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(104)
#    Time: 220 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 104
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 231 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:15:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:15:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:15:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:15:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:15:19 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:15:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:15:21 on May 25,2023, Elapsed time: 0:00:32
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:15:21 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(104)
#    Time: 220 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 104
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 231 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:16:31 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# ** Error: ./Datapath.sv(95): (vlog-2730) Undefined variable: 'alu_s0'.
# ** Error: ./Datapath.sv(96): (vlog-2730) Undefined variable: 'rf_s'.
# ** Error: ./Datapath.sv(97): (vlog-2730) Undefined variable: 'rf_w_en'.
# ** Error: ./Datapath.sv(98): (vlog-2730) Undefined variable: 'd_wr'.
# ** Error: ./Datapath.sv(99): (vlog-2730) Undefined variable: 'rf_w_addr'.
# ** Error: ./Datapath.sv(100): (vlog-2730) Undefined variable: 'rf_ra_addr'.
# ** Error: ./Datapath.sv(101): (vlog-2730) Undefined variable: 'rf_rb_addr'.
# ** Error: ./Datapath.sv(102): (vlog-2730) Undefined variable: 'd_addr'.
# End time: 17:16:31 on May 25,2023, Elapsed time: 0:00:00
# Errors: 8, Warnings: 0
# ** Error: /home/souleymane/intelFPGA_lite/20.1/modelsim_ase/linuxaloem/vlog failed.
# Error in macro ./runrtlDatapath.do line 16
# /home/souleymane/intelFPGA_lite/20.1/modelsim_ase/linuxaloem/vlog failed.
#     while executing
# "vlog -work work +acc "./Datapath.sv""
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:17:54 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:17:54 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:17:54 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:17:54 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:17:54 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:17:54 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:17:54 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:17:54 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:17:54 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:17:55 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:17:57 on May 25,2023, Elapsed time: 0:02:36
# Errors: 1, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:17:57 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:19:09 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:19:09 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:19:09 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:19:09 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:19:09 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:19:09 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:19:10 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:19:10 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:19:10 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:19:10 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:19:12 on May 25,2023, Elapsed time: 0:01:15
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:19:12 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0   MUX_Q = xxxx
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:23:16 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:23:16 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:23:16 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:23:16 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:23:16 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:23:17 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:23:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:23:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:23:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:23:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:23:19 on May 25,2023, Elapsed time: 0:04:07
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:23:19 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0   ALU_Q = 0000
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:25:58 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:25:58 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:25:58 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:25:58 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:25:58 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:25:58 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:25:58 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:25:58 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:25:58 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:25:59 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:26:01 on May 25,2023, Elapsed time: 0:02:42
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:26:01 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0   ALU_Q = 0000, MUX_Q=xxxx
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
run Mux2to1.do
# Invalid time value: Mux2to1.do
run Mux2to1.do
# Invalid time value: Mux2to1.do
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:27:45 on May 25,2023
# vlog -reportprogress 300 ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:27:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 17:27:46 on May 25,2023, Elapsed time: 0:01:45
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work ALU_tb 
# Start time: 17:27:46 on May 25,2023
# Loading sv_std.std
# Loading work.ALU_tb
# Loading work.ALU
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
do runlab2.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:27:54 on May 25,2023
# vlog -reportprogress 300 ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:27:54 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 17:27:55 on May 25,2023, Elapsed time: 0:00:09
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work Mux2to1_tb 
# Start time: 17:27:55 on May 25,2023
# Loading sv_std.std
# Loading work.Mux2to1_tb
# Loading work.Mux2to1
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:21 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:29:22 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:22 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:29:22 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:22 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:29:22 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:22 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:29:22 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:22 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:29:22 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:29:24 on May 25,2023, Elapsed time: 0:01:29
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:29:24 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0   ALU_Q = 0000, MUX_Q=xxxx
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runlab2.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:29:45 on May 25,2023
# vlog -reportprogress 300 ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:29:45 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 17:29:46 on May 25,2023, Elapsed time: 0:00:22
# Errors: 0, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work Mux2to1_tb 
# Start time: 17:29:46 on May 25,2023
# Loading sv_std.std
# Loading work.Mux2to1_tb
# Loading work.Mux2to1
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
do runlab2.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:30:58 on May 25,2023
# vlog -reportprogress 300 ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:30:58 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 17:30:58 on May 25,2023, Elapsed time: 0:01:12
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work Mux2to1_tb 
# Start time: 17:30:58 on May 25,2023
# Loading sv_std.std
# Loading work.Mux2to1_tb
# Loading work.Mux2to1
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
do runlab.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:11 on May 25,2023
# vlog -reportprogress 300 ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:31:11 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 17:31:11 on May 25,2023, Elapsed time: 0:00:13
# Errors: 0, Warnings: 0
# vsim -voptargs=""+acc"" -t 1ps -lib work ALU_tb 
# Start time: 17:31:12 on May 25,2023
# Loading sv_std.std
# Loading work.ALU_tb
# Loading work.ALU
# .main_pane.wave.interior.cs.body.pw.wf
# .main_pane.structure.interior.cs.body.struct
# .main_pane.objects.interior.cs.body.tree
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:31:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:31:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:31:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:31:17 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:31:17 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:31:18 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:31:18 on May 25,2023, Elapsed time: 0:00:06
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:31:18 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
#                    0   ALU_Q = 0000, MUX_Q=xxxx
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:36:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:36:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:36:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:36:30 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:36:30 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:36:30 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:36:30 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:36:30 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:36:30 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:36:30 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:36:32 on May 25,2023, Elapsed time: 0:05:14
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:36:32 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# ** Error (suppressible): (vsim-3053) Illegal output or inout port connection for port 'WriteData'.
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runrtlDatapath.do PAUSED at line 25
do runlab.do
# Create work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:09 on May 25,2023
# vlog -reportprogress 300 ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:37:09 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -voptargs="+acc" -t 1ps -lib work ALU_tb
# vsim -voptargs=""+acc"" -t 1ps -lib work ALU_tb 
# Start time: 17:36:32 on May 25,2023
# Loading sv_std.std
# Loading work.ALU_tb
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ALU_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ALU_tb/A
# add wave -noupdate /ALU_tb/B
# add wave -noupdate /ALU_tb/Sel
# add wave -noupdate /ALU_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000000  Output =     0
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000001  Output =    14
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000001  Output =     1
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000010  Output =    17
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000010  Output =    13
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000010  Output =     2
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000011  Output =    18
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000011  Output =    12
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000011  Output =     3
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000100  Output =    19
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000100  Output =    11
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000100  Output =     4
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000101  Output =    20
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000101  Output =    10
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000101  Output =     5
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000110  Output =    21
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000110  Output =     9
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000110  Output =     6
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000000111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000000111  Output =    22
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000000111  Output =     8
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000000111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000000111  Output =     7
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000000111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001000  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001000  Output =    23
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001000  Output =     7
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001000  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001000  Output =     8
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001000  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001001  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001001  Output =    24
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001001  Output =     6
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001001  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001001  Output =     9
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001001  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001010  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001010  Output =    25
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001010  Output =     5
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001010  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001010  Output =    10
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001010  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001011  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001011  Output =    26
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001011  Output =     4
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001011  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001011  Output =    11
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001011  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001100  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001100  Output =    27
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001100  Output =     3
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001100  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001100  Output =    12
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001100  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001101  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001101  Output =    28
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001101  Output =     2
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001101  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001101  Output =    13
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001101  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001110  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001110  Output =    29
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001110  Output =     1
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001110  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001110  Output =    14
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001110  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
# Select signal = 0  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 1  Input A = 0000000000001111  Input B = 0000000000001111  Output =    30
# Select signal = 2  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 3  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 4  Input A = 0000000000001111  Input B = 0000000000001111  Output =     0
# Select signal = 5  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 6  Input A = 0000000000001111  Input B = 0000000000001111  Output =    15
# Select signal = 7  Input A = 0000000000001111  Input B = 0000000000001111  Output =    16
# 
# End
do runlab2.do
# Create work library
# vlib work
# ** Warning: (vlib-34) Library already exists at "work".
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:19 on May 25,2023
# vlog -reportprogress 300 ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:37:19 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -voptargs="+acc" -t 1ps -lib work Mux2to1_tb
# End time: 17:37:19 on May 25,2023, Elapsed time: 0:00:47
# Errors: 1, Warnings: 1
# vsim -voptargs=""+acc"" -t 1ps -lib work Mux2to1_tb 
# Start time: 17:37:19 on May 25,2023
# Loading sv_std.std
# Loading work.Mux2to1_tb
# Loading work.Mux2to1
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Mux2to1.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Mux2to1_tb/ALUQ
# add wave -noupdate /Mux2to1_tb/RFSelect
# add wave -noupdate /Mux2to1_tb/ReadData
# add wave -noupdate /Mux2to1_tb/WriteData
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000000111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001000  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001001  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001010  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001011  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001100  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001101  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001110  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     0  RFSelect = 00  ReadData = 0000000000001111  WriteData =     0
# ALUQ =     0  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000000111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001000  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001001  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001010  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001011  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001100  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001101  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001110  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     1  RFSelect = 00  ReadData = 0000000000001111  WriteData =     1
# ALUQ =     1  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000000111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001000  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001001  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001010  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001011  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001100  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001101  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001110  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     2  RFSelect = 00  ReadData = 0000000000001111  WriteData =     2
# ALUQ =     2  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000000111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001000  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001001  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001010  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001011  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001100  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001101  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001110  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     3  RFSelect = 00  ReadData = 0000000000001111  WriteData =     3
# ALUQ =     3  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000000111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001000  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001001  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001010  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001011  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001100  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001101  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001110  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     4  RFSelect = 00  ReadData = 0000000000001111  WriteData =     4
# ALUQ =     4  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000000111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001000  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001001  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001010  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001011  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001100  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001101  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001110  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     5  RFSelect = 00  ReadData = 0000000000001111  WriteData =     5
# ALUQ =     5  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000000111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001000  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001001  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001010  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001011  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001100  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001101  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001110  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     6  RFSelect = 00  ReadData = 0000000000001111  WriteData =     6
# ALUQ =     6  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001000  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001001  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001010  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001011  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001100  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001101  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001110  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     7  RFSelect = 00  ReadData = 0000000000001111  WriteData =     7
# ALUQ =     7  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000000111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001001  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001010  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001011  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001100  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001101  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001110  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     8  RFSelect = 00  ReadData = 0000000000001111  WriteData =     8
# ALUQ =     8  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000000111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001000  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001010  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001011  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001100  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001101  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001110  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =     9  RFSelect = 00  ReadData = 0000000000001111  WriteData =     9
# ALUQ =     9  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000000111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001000  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001001  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001011  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001100  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001101  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001110  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    10  RFSelect = 00  ReadData = 0000000000001111  WriteData =    10
# ALUQ =    10  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000000111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001000  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001001  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001010  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001100  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001101  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001110  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    11  RFSelect = 00  ReadData = 0000000000001111  WriteData =    11
# ALUQ =    11  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000000111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001000  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001001  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001010  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001011  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001101  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001110  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    12  RFSelect = 00  ReadData = 0000000000001111  WriteData =    12
# ALUQ =    12  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000000111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001000  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001001  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001010  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001011  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001100  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001110  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    13  RFSelect = 00  ReadData = 0000000000001111  WriteData =    13
# ALUQ =    13  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000000111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001000  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001001  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001010  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001011  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001100  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001101  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    14  RFSelect = 00  ReadData = 0000000000001111  WriteData =    14
# ALUQ =    14  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000000  WriteData =     0
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000001  WriteData =     1
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000010  WriteData =     2
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000011  WriteData =     3
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000100  WriteData =     4
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000101  WriteData =     5
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000110  WriteData =     6
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000000111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000000111  WriteData =     7
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001000  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001000  WriteData =     8
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001001  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001001  WriteData =     9
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001010  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001010  WriteData =    10
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001011  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001011  WriteData =    11
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001100  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001100  WriteData =    12
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001101  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001101  WriteData =    13
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001110  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001110  WriteData =    14
# ALUQ =    15  RFSelect = 00  ReadData = 0000000000001111  WriteData =    15
# ALUQ =    15  RFSelect = 01  ReadData = 0000000000001111  WriteData =    15
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:37:28 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:37:28 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:37:28 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:37:28 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:37:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:37:29 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:37:29 on May 25,2023, Elapsed time: 0:00:10
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:37:29 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# ** Error (suppressible): (vsim-3053) Illegal output or inout port connection for port 'WriteData'.
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runrtlDatapath.do PAUSED at line 25
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:40:36 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:40:37 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:40:37 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:40:37 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:40:37 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:40:37 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:40:37 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:40:37 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:40:37 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:40:37 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:37:29 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, RF_s=xxxxxxxxxxxxxxxx, 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:44:25 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:44:25 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:44:26 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:44:26 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:44:26 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:44:26 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:44:26 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:44:26 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:44:26 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:44:26 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:44:28 on May 25,2023, Elapsed time: 0:06:59
# Errors: 1, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:44:28 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:45:20 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:45:20 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:45:20 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:45:20 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:45:20 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:45:20 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:45:20 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:45:20 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:45:20 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:45:20 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:45:22 on May 25,2023, Elapsed time: 0:00:54
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:45:22 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:48:55 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:48:55 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:48:55 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:48:55 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:48:55 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:48:56 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:48:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:48:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:48:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:48:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:48:58 on May 25,2023, Elapsed time: 0:03:36
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:48:58 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000110, MUX_SELECT=0 
# ALU_inA = 0000000000000110, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000110, MUX_SELECT=0 
# ALU_inA = 0000000000000110, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000110, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:49:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:49:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:49:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:49:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:49:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:49:30 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:49:30 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:49:30 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:49:30 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:49:30 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:49:33 on May 25,2023, Elapsed time: 0:00:35
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:49:33 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000100, MUX_SELECT=0 
# ALU_inA = 0000000000000100, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000100, MUX_SELECT=0 
# ALU_inA = 0000000000000100, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000100, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:03 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:50:03 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:03 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:50:03 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:03 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:50:03 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:03 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:50:04 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:04 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:50:04 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:50:05 on May 25,2023, Elapsed time: 0:00:32
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:50:05 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:50:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:50:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:50:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:50:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:50:56 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:50:56 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:50:58 on May 25,2023, Elapsed time: 0:00:53
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:50:58 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RFSelect'. The port definition is at: ./Mux2to1.sv(7).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT/MUX File: ./Datapath.sv Line: 35
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(112)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 112
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:51:52 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:51:52 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:51:52 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:51:52 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:51:52 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:51:52 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:51:52 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:51:52 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:51:52 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:51:52 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:51:55 on May 25,2023, Elapsed time: 0:00:57
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:51:55 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RF_s'. The port definition is at: ./Datapath.sv(8).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT File: ./Datapath.sv Line: 72
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(113)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 113
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:52:27 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:52:27 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:52:27 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:52:27 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:52:27 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:52:27 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:52:27 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:52:28 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:52:28 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:52:28 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:52:30 on May 25,2023, Elapsed time: 0:00:35
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:52:30 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (1) for port 'RF_s'. The port definition is at: ./Datapath.sv(8).
#    Time: 0 ps  Iteration: 0  Instance: /Datapath_tb/DUT File: ./Datapath.sv Line: 72
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=0 
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=xxxxxxxxxxxxxxxx, MUX_SELECT=1 
# ** Note: $stop    : ./Datapath.sv(113)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 113
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:53:50 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:53:50 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:53:50 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:53:50 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:53:50 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:53:50 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:53:50 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:53:50 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:53:50 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:53:50 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:53:52 on May 25,2023, Elapsed time: 0:01:22
# Errors: 0, Warnings: 1
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:53:52 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000100, MUX_SELECT=00 
# ALU_inA = 0000000000000100, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000100, MUX_SELECT=00 
# ALU_inA = 0000000000000100, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000110, MUX_SELECT=01 
# ALU_inA = 0000000000000110, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000110, MUX_SELECT=01 
# ** Note: $stop    : ./Datapath.sv(114)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 114
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:54:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 17:54:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:54:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 17:54:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:54:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 17:54:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:54:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 17:54:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 17:54:29 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 17:54:29 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 17:54:31 on May 25,2023, Elapsed time: 0:00:39
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 17:54:32 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=00 
# ALU_inA = 0000000000000000, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=00 
# ALU_inA = 0000000000000000, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=01 
# ** Note: $stop    : ./Datapath.sv(114)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 114
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
do runrtlDatapath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 133: Unable to remove directory "/mnt/hgfs/soul/Documents/University/Courses/Spring_23/CES_330/CourseProject/Project/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Datapath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:10:43 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Datapath.sv 
# -- Compiling module Datapath
# -- Compiling module Datapath_tb
# 
# Top level modules:
# 	Datapath_tb
# End time: 18:10:43 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:10:43 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 18:10:44 on May 25,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:10:44 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 18:10:44 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./regFile16x16.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:10:44 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./regFile16x16.sv 
# -- Compiling module regFile16x16
# -- Compiling module regFile16x16_tb
# 
# Top level modules:
# 	regFile16x16_tb
# End time: 18:10:44 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux2to1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:10:44 on May 25,2023
# vlog -reportprogress 300 -work work "+acc" ./Mux2to1.sv 
# -- Compiling module Mux2to1
# -- Compiling module Mux2to1_tb
# 
# Top level modules:
# 	Mux2to1_tb
# End time: 18:10:44 on May 25,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Datapath_tb
# End time: 18:10:46 on May 25,2023, Elapsed time: 0:16:14
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Datapath_tb 
# Start time: 18:10:46 on May 25,2023
# Loading sv_std.std
# Loading work.Datapath_tb
# Loading work.Datapath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux2to1
# Loading work.regFile16x16
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do waveDatapath.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Datapath_tb/Clock
# add wave -noupdate /Datapath_tb/D_Addr
# add wave -noupdate /Datapath_tb/D_Wr
# add wave -noupdate /Datapath_tb/RF_s
# add wave -noupdate /Datapath_tb/RF_W_Addr
# add wave -noupdate /Datapath_tb/RF_W_en
# add wave -noupdate /Datapath_tb/RF_Ra_Addr
# add wave -noupdate /Datapath_tb/RF_Rb_Addr
# add wave -noupdate /Datapath_tb/ALU_s0
# add wave -noupdate /Datapath_tb/ALU_inA
# add wave -noupdate /Datapath_tb/ALU_inB
# add wave -noupdate /Datapath_tb/ALU_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0            
# configure wave -namecolwidth 150        
# configure wave -valuecolwidth 100       
# configure wave -justifyvalue left       
# configure wave -signalnamewidth 0       
# configure wave -snapdistance 10         
# configure wave -datasetprefix 0         
# configure wave -rowmargin 4             
# configure wave -childrowmargin 2        
# configure wave -gridoffset 0            
# configure wave -gridperiod 1            
# configure wave -griddelta 40            
# configure wave -timeline 0              
# configure wave -timelineunits ps        
# update                                  
# WaveRestoreZoom {0 ps} {1 ns}          
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ALU_inA = xxxxxxxxxxxxxxxx, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=00 
# ALU_inA = 0000000000000000, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=00 
# ALU_inA = 0000000000000000, ALU_inB = xxxxxxxxxxxxxxxx, ALU_out = zzzzzzzzzzzzzzzz, MUX_Q=0000000000000000, MUX_SELECT=01 
# ** Note: $stop    : ./Datapath.sv(114)
#    Time: 400 ns  Iteration: 0  Instance: /Datapath_tb
# Break in Module Datapath_tb at ./Datapath.sv line 114
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 420 ns
# 
# End
